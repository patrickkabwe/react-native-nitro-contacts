///
/// NitroAuthorizationStatus.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `NitroAuthorizationStatus`, backed by a C++ enum.
 */
public typealias NitroAuthorizationStatus = margelo.nitro.nitrocontacts.NitroAuthorizationStatus

public extension NitroAuthorizationStatus {
  /**
   * Get a NitroAuthorizationStatus for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "authorized":
        self = .authorized
      case "denied":
        self = .denied
      case "restricted":
        self = .restricted
      case "notDetermined":
        self = .notdetermined
      case "limited":
        self = .limited
      default:
        return nil
    }
  }

  /**
   * Get the String value this NitroAuthorizationStatus represents.
   */
  var stringValue: String {
    switch self {
      case .authorized:
        return "authorized"
      case .denied:
        return "denied"
      case .restricted:
        return "restricted"
      case .notdetermined:
        return "notDetermined"
      case .limited:
        return "limited"
    }
  }
}
